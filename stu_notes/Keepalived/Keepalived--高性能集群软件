Keepalived :
    全局配置：
    
      ! Configuration File for keepalived
      global_defs {                                                         # global_defs 是全局配置的标识符
          notification_email {                                              # 用于设置警报地址，可以设置多个，每行一个
             root@localhost                                                 
          }
          notification_email_from keepalived@localhost                      # 用于设置邮件的发送地址
          smtp_server 127.0.0.1                                             # 用于设置邮件的 smpt server 地址
          smtp_connect_timeout 30                                           # 用于设置链接 smpt server 的超时时长
          router_id node1                                                   # 主机名，在另一结点为node2
          vrrp_mcast_group4 224.0.100.100                                   # 设置多播地址
      }
      
      
      
      
      
      
      
    VRRP 实例配置：
    
      vrrp_instance VI_1 {
        state MASTER                                                        # 指定 keepalived 的角色 ， MASTER | BACKUP
        interface eth0                                                      # 用于指定 HA 检测网络的接口
        virtual_router_id 6                                                 # 标识实例，同一个实例的值必须相同
        priority 100                                                        # 设置节点的优先级
        advert_int 1                                                        # MASTER 和 BACKUP 的同步时间间隔
        
        authentication {
            auth_type PASS                                                  #预共享密钥认证
            auth_pass 571f97b2
        }
        
        virtual_ipaddress {                                                 # 用来设置虚拟 IP 之地 ，即 VIP
            172.18.0.10/24 dev eth0
        }
        
        track_interface {                                                   # 用于设置一些额外的监听接口，任何一个接口出现问题，keepalived 
            eth0                                                            # 就会进入 fault 状态
        }
      }
      
      
      
       virtual_server 172.18.0.10 80 {
          delay_loop 3                                            
          lb_algo rr
          lb_kind DR
          protocol TCP
          sorry_server 127.0.0.1 80
          real_server 192.168.1.1 80 {
              weight 1
              HTTP_GET {
                  url {
                      path /
                      status_code 200
                  }
                  connect_timeout 1
                  nb_get_retry 3
                  delay_before_retry 1
              }
           }
           
           real_server 192.168.1.2 80 {
              weight 1
              HTTP_GET {
                  url {
                      path /
                      status_code 200
                  }
                  connect_timeout 1
                  nb_get_retry 3
                  delay_before_retry 1
              }
          }
        }   

      
      
      
      
      
      
      
      
      
      
      
